name: 'Release'
description: 'Allows semantic-release to be executed in a monorepo'
inputs:
  entry-point:
    description: 'The directory of the package to release.'
    required: true
  github-token:
    description: 'The GitHub token to use for releasing'
    required: true
  npm-token:
    description: 'The NPM token to use for releasing'
    required: true
runs:
  using: "composite"
  steps:
    - name: Get branch name
      id: branch-name
      uses: tj-actions/branch-names@v5.1
    - name: "Temporarily disable 'include administrators' branch protection"
      id: disable_include_admins
      uses: benjefferies/branch-protection-bot@master
      if: always()
      with:
        access_token: ${{ inputs.github-token }}
        branch: ${{ steps.branch-name.outputs.current_branch }}
        enforce_admins: false
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 'lts/*'
    - name: Cache dependencies
      id: cache
      uses: actions/cache@v2
      with:
        path: ./node_modules
        key: modules-${{ hashFiles('package-lock.json') }}
    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm ci --ignore-scripts
      shell: bash
    - name: Release
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        NPM_TOKEN: ${{ inputs.npm-token }}
      run: npx semantic-release
      working-directory: ${{ inputs.entry-point }}
      shell: bash
    - name: "Restore 'include administrators' default branch protection"
      uses: benjefferies/branch-protection-bot@master
      if: always()
      with:
        access_token: ${{ inputs.github-token }}
        branch: ${{ steps.branch-name.outputs.current_branch }}
        enforce_admins: ${{ steps.disable_include_admins.outputs.initial_status }}
